{
	// Place your snippets for typescriptreact here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"useEffect": {
    "prefix": "usf",
    "body": "useEffect(() => {\n$0\n}, [$1])",
    "description": "Adds use effect"
  },

	"React Functional Component": {
    "prefix": "rfc",
    "body": [
      "import React from 'react';",
      "",
      "interface ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}}Props {",
      "  $2",
      "}",
      "",
      "const ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}}: React.FC<${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}}Props> = (${3:props}) => {",
      "  return (",
      "    <div>",
      "      $0",
      "    </div>",
      "  );",
      "};",
      "",
      "export { ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}} };"
    ],
    "description": "Create a React functional component with TypeScript"
  },

	"React Functional Component2": {
    "prefix": "rfc2",
    "body": [
      "import React from 'react';",
      "",
      "interface ${1:ComponentName}Props {",
      "  ",
      "}",
      "",
      "const ${1:ComponentName}: React.FC<${1:ComponentName}Props> = (props) => {",
      "  return (",
      "    <div>",
      "      ${2:Component content}",
      "    </div>",
      "  );",
      "};",
      "",
      "export { ${1:ComponentName} }"
    ],
    "description": "Create a React functional component with TypeScript"
  }
}